# config.py
import os
import json
import logging
from google.oauth2 import service_account
from google.auth.exceptions import GoogleAuthError

logger = logging.getLogger(__name__)

class GoogleConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Google API —Å –∑–∞—â–∏—Ç–æ–π –∫–ª—é—á–µ–π"""
    
    # Scopes –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ Google
    SCOPES = {
        'analytics': ['https://www.googleapis.com/auth/analytics.readonly'],
        'bigquery': ['https://www.googleapis.com/auth/bigquery'],
        'drive': ['https://www.googleapis.com/auth/drive.readonly']
    }
    
    @staticmethod
    def get_credentials(service_type='analytics'):
        """
        –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö Google API
        
        Args:
            service_type (str): –¢–∏–ø —Å–µ—Ä–≤–∏—Å–∞ ('analytics', 'bigquery', 'drive')
        
        Returns:
            service_account.Credentials: –û–±—ä–µ–∫—Ç —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        """
        scope = GoogleConfig.SCOPES.get(service_type, GoogleConfig.SCOPES['analytics'])
        
        # –°–ø–æ—Å–æ–± 1: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è (–ü–†–ò–û–†–ò–¢–ï–¢ - –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)
        env_key = os.environ.get('GOOGLE_SERVICE_ACCOUNT_JSON')
        if env_key:
            try:
                service_account_info = json.loads(env_key)
                logger.info("‚úÖ –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è")
                return service_account.Credentials.from_service_account_info(
                    service_account_info,
                    scopes=scope
                )
            except json.JSONDecodeError as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è: {e}")
                raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON –≤ GOOGLE_SERVICE_ACCOUNT_JSON")
        
        # –°–ø–æ—Å–æ–± 2: –§–∞–π–ª —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        key_file_path = os.environ.get('GOOGLE_KEY_FILE_PATH')
        if key_file_path:
            try:
                logger.info(f"üîë –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á –∏–∑ —Ñ–∞–π–ª–∞: {key_file_path}")
                return service_account.Credentials.from_service_account_file(
                    key_file_path,
                    scopes=scope
                )
            except FileNotFoundError:
                logger.error(f"‚ùå –§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {key_file_path}")
                raise FileNotFoundError(f"–§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {key_file_path}")
        
        # –°–ø–æ—Å–æ–± 3: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        try:
            default_path = 'service-account-key.json'
            logger.info(f"üîë –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–ª—é—á –∏–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø—É—Ç–∏: {default_path}")
            return service_account.Credentials.from_service_account_file(
                default_path,
                scopes=scope
            )
        except FileNotFoundError:
            logger.error("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å –∫–ª—é—á–æ–º —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
            raise Exception(
                "–ù–µ –Ω–∞–π–¥–µ–Ω –∫–ª—é—á —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:\n"
                "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è GOOGLE_SERVICE_ACCOUNT_JSON\n"
                "2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GOOGLE_KEY_FILE_PATH –Ω–∞ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–ª—é—á–∞\n"
                "3. –ü–æ–ª–æ–∂–∏—Ç–µ —Ñ–∞–π–ª service-account-key.json –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞"
            )
    
    @staticmethod
    def validate_credentials(credentials):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        try:
            # –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
            credentials.refresh(credentials._request)
            logger.info("‚úÖ –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã")
            return True
        except Exception as e:
            logger.error(f"‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {e}")
            return False
